// Mega Image Viewer v1.0 - jQuery image viewer plugin
// (c) 2012 lhp - http://codecanyon.net/user/lhp
(function (d) {
    var g, c, f;
    c = {
        dragSmooth: 8
    };
    f = {
        viewportWidth: "100%",
        viewportHeight: "100%",
        startScale: 1,
        startX: 0,
        startY: 0,
        animTime: 500,
        draggInertia: 10,
        contentUrl: "",
        intNavEnable: true,
        intNavPos: "T",
        intNavAutoHide: false
    };
    g = {
        init: function (h) {
            return this.each(function () {
                var l = d(this),
                    k = l.data("lhpMIV"),
                    j = l.find("img"),
                    i = {};
                d.extend(i, f, h);
                d.extend(i, c);
                if (!k) {
                    if (i.draggInertia < 0) {
                        i.draggInertia = 0
                    }
                    i.animTime = parseInt(i.animTime);
                    if (i.animTime < 0) {
                        i.animTime = 0
                    }
                    if (j.length > 0) {
                        i.contentUrl = j[0].src;
                        j.remove()
                    }
                    l.data("lhpMIV", {});
                    l.data("lhpMIV").interImgsTmp = j;
                    l.data("lhpMIV").lc = new e(i, l)
                }
            })
        },
        setPosition: function (h, j, i) {
            return this.each(function () {
                var l = d(this),
                    k = l.data("lhpMIV");
                if (k) {
                    l.data("lhpMIV").lc.setProperties(h, j, i)
                }
            })
        },
        moveUp: function () {
            return this.each(function () {
                var i = d(this),
                    h = i.data("lhpMIV");
                if (h) {
                    i.data("lhpMIV").lc.beginDirectMove("U")
                }
            })
        },
        moveDown: function () {
            return this.each(function () {
                var i = d(this),
                    h = i.data("lhpMIV");
                if (h) {
                    i.data("lhpMIV").lc.beginDirectMove("D")
                }
            })
        },
        moveLeft: function () {
            return this.each(function () {
                var i = d(this),
                    h = i.data("lhpMIV");
                if (h) {
                    i.data("lhpMIV").lc.beginDirectMove("L")
                }
            })
        },
        moveRight: function () {
            return this.each(function () {
                var i = d(this),
                    h = i.data("lhpMIV");
                if (h) {
                    i.data("lhpMIV").lc.beginDirectMove("R")
                }
            })
        },
        moveStop: function () {
            return this.each(function () {
                var i = d(this),
                    h = i.data("lhpMIV");
                if (h) {
                    i.data("lhpMIV").lc.stopDirectMoving()
                }
            })
        },
        zoom: function () {
            return this.each(function () {
                var i = d(this),
                    h = i.data("lhpMIV");
                if (h) {
                    i.data("lhpMIV").lc.beginZooming("Z")
                }
            })
        },
        unzoom: function () {
            return this.each(function () {
                var i = d(this),
                    h = i.data("lhpMIV");
                if (h) {
                    i.data("lhpMIV").lc.beginZooming("U")
                }
            })
        },
        zoomStop: function () {
            return this.each(function () {
                var i = d(this),
                    h = i.data("lhpMIV");
                if (h) {
                    i.data("lhpMIV").lc.stopZooming()
                }
            })
        },
        fitToViewport: function () {
            return this.each(function () {
                var i = d(this),
                    h = i.data("lhpMIV");
                if (h) {
                    i.data("lhpMIV").lc.setProperties(null, null, 0.0001)
                }
            })
        },
        fullSize: function () {
            return this.each(function () {
                var i = d(this),
                    h = i.data("lhpMIV");
                if (h) {
                    i.data("lhpMIV").lc.setProperties(null, null, 1)
                }
            })
        },
        adaptsToContainer: function () {
            return this.each(function () {
                var i = d(this),
                    h = i.data("lhpMIV");
                if (h) {
                    i.data("lhpMIV").lc.adaptsToContainer()
                }
            })
        },
        destroy: function () {
            return this.each(function () {
                var i = d(this),
                    h = i.data("lhpMIV");
                if (h) {
                    i.data("lhpMIV").lc.destroy();
                    i.prepend(i.data("lhpMIV").interImgsTmp);
                    i.removeData("lhpMIV")
                }
            })
        }
    };
    d.fn.lhpMegaImgViewer = function (h) {
        if (g[h]) {
            return g[h].apply(this, Array.prototype.slice.call(arguments, 1))
        } else {
            if (typeof h === "object" || !h) {
                return g.init.apply(this, arguments)
            } else {
                d.error("Method " + h + " does not exist on jQuery.lhpMegaImgViewer")
            }
        }
    };
    var e = function (h, i) {
            this.isTouchDev = (typeof (window.ontouchstart) != "undefined") ? true : false;
            this.sett = h;
            this.$mainHolder = i;
            this.lastMousePageCoor = this.lastDrag = this.contentFullSize = {};
            this.$mivHol = this.$contentHol = this.$content = null;
            this.$preloadHol = this.$blackScreen = this.$navHol = null;
            this.movingIntreval = this.movingDirectIntreval = this.navAutohideInterval = null;
            this.speedX = this.speedY = null;
            this.targetX = this.targetY = null;
            this.allow = {
                allowDown: false,
                allowUp: false,
                allowLeft: false,
                allowRight: false,
                allowZoom: false,
                allowUnzoom: false
            };
            this.sm = new a();
            this.createHolders();
            this.contentLoader = new b(this.sett.contentUrl, this.$contentHol, function (j) {
                return function (k) {
                    j.imgContentStart(k)
                }
            }(this))
        };
    e.prototype.createHolders = function () {
        this.$mivHol = d("<div />").addClass("lhp_miv_holder").css({
            position: "relative",
            overflow: "hidden",
            width: this.sett.viewportWidth,
            height: this.sett.viewportHeight
        });
        this.$preloadHol = d("<div />").addClass("lhp_miv_preload_holder");
        this.$contentHol = d("<div />").addClass("lhp_miv_content_holder").css({
            position: "absolute"
        });
        this.$blackScreen = d("<div />").addClass("lhp_miv_blackScreen").css({
            position: "absolute",
            "z-index": "1",
            width: "100%",
            height: "100%",
            background: "#ffffff"
        });
        this.$mivHol.append(this.$preloadHol);
        this.$mivHol.append(this.$blackScreen);
        this.$mivHol.append(this.$contentHol);
        this.$mainHolder.append(this.$mivHol)
    };
    e.prototype.iniNav = function () {
        var j = d("<ul />").addClass("ui-widget ui-helper-clearfix"),
            k = this.$mainHolder,
            i = this.$navHol,
            n, h, m = this,
            l = [
                ["moveDown", "moveStop", "ui-icon-carat-1-n"],
                ["moveUp", "moveStop", "ui-icon-carat-1-s"],
                ["moveRight", "moveStop", "ui-icon-carat-1-w"],
                ["moveLeft", "moveStop", "ui-icon-carat-1-e"],
                ["zoom", "zoomStop", "ui-icon-zoomin"],
                ["unzoom", "zoomStop", "ui-icon-zoomout"],
                ["fitToViewport", null, "ui-icon-stop"],
                ["fullSize", null, "ui-icon-arrow-4-diag"]
            ];
        d.each(l, function (o) {
            mousedownFunc = l[o][0], mouseupFunc = l[o][1], n = d("<li />").addClass("ui-state-default ui-corner-all " + mousedownFunc);
            h = d("<span />").addClass("ui-icon " + l[o][2]);
            n.append(h);
            j.append(n);
            n.bind("mouseenter.lhpMIV touchstart.lhpMIV", function () {
                if (!d(this).hasClass("lhp_miv_nav_btt_disab")) {
                    d(this).addClass("ui-state-hover")
                }
            });
            n.bind("mouseleave.lhpMIV touchend.lhpMIV", function () {
                d(this).removeClass("ui-state-hover")
            });
            n.bind("mousedown.lhpMIV touchstart.lhpMIV", function (p) {
                return function (q) {
                    if (!d(this).hasClass("lhp_miv_nav_btt_disab")) {
                        k.lhpMegaImgViewer(p)
                    }
                    q.preventDefault()
                }
            }(mousedownFunc));
            if (mouseupFunc) {
                n.bind("mouseup.lhpMIV touchend.lhpMIV", function (p) {
                    return function (q) {
                        if (!d(this).hasClass("lhp_miv_nav_btt_disab")) {
                            k.lhpMegaImgViewer(p)
                        }
                        q.preventDefault()
                    }
                }(mouseupFunc))
            }
        });
        k.bind("mivChange.lhpMIV", function (q) {
            var p = "lhp_miv_nav_btt_disab",
                o = "ui-state-hover";
            if (q.allowDown) {
                i.find(".moveDown").removeClass(p)
            } else {
                i.find(".moveDown").removeClass(o).addClass(p)
            }
            if (q.allowUp) {
                i.find(".moveUp").removeClass(p)
            } else {
                i.find(".moveUp").removeClass(o).addClass(p)
            }
            if (q.allowLeft) {
                i.find(".moveLeft").removeClass(p)
            } else {
                i.find(".moveLeft").removeClass(o).addClass(p)
            }
            if (q.allowRight) {
                i.find(".moveRight").removeClass(p)
            } else {
                i.find(".moveRight").removeClass(o).addClass(p)
            }
            if (q.allowZoom) {
                i.find(".zoom").removeClass(p);
                i.find(".fullSize").removeClass(p)
            } else {
                i.find(".zoom").removeClass(o).addClass(p);
                i.find(".fullSize").removeClass(o).addClass(p)
            }
            if (q.allowUnzoom) {
                i.find(".unzoom").removeClass(p);
                i.find(".fitToViewport").removeClass(p)
            } else {
                i.find(".unzoom").removeClass(o).addClass(p);
                i.find(".fitToViewport").removeClass(o).addClass(p)
            }
        });
        if (this.sett.intNavAutoHide) {
            i.css("display", "none");
            k.bind("mouseenter.lhpMIV touchstart.lhpMIV", function () {
                clearInterval(m.navAutohideInterval);
                i.fadeIn("fast")
            });
            k.bind("mouseleave.lhpMIV touchend.lhpMIV", function () {
                clearInterval(m.navAutohideInterval);
                m.navAutohideInterval = setInterval(function (o) {
                    return function () {
                        o.stop().clearQueue().fadeOut("fast")
                    }
                }(i), 1000)
            })
        }
        i.append(j)
    };
    e.prototype.imgContentStart = function (h) {
        this.$content = h;
        h.addClass("lhp_miv_content").css({
            "float": "left"
        });
        this.contentFullSize = {
            w: h.width(),
            h: h.height()
        };
        this.start();
        this.$blackScreen.animate({
            opacity: 0
        }, {
            duration: 500,
            complete: function () {
                d(this).remove()
            }
        })
    };
    e.prototype.start = function () {
        if (this.sett.intNavEnable) {
            this.$navHol = d('<div class="lhp_miv_nav"/>').addClass("lhp_miv_nav_pos_" + this.sett.intNavPos);
            this.iniNav();
            this.$mivHol.prepend(this.$navHol)
        }
        this.$preloadHol.remove();
        this.$contentHol.bind("mouseenter.lhpMIV", {
            _this: this
        }, this.mouseenterHandler);
        if (this.isTouchDev) {
            this.$contentHol.bind("touchstart.lhpMIV", {
                _this: this
            }, this.mousedownHandler)
        } else {
            this.$contentHol.bind("mousedown.lhpMIV", {
                _this: this
            }, this.mousedownHandler);
            this.$contentHol.bind("mouseup.lhpMIV", {
                _this: this
            }, this.mouseupHandler);
            this.$contentHol.bind("mouseleave.lhpMIV", {
                _this: this
            }, this.mouseupHandler)
        }
        this.$contentHol.bind("mousewheel.lhpMIV", {
            _this: this
        }, this.mousewheelHandler);
        this.setProperties(this.sett.startX, this.sett.startY, this.sett.startScale, true)
    };
    e.prototype.destroy = function () {
        this.contentLoader.dispose();
        this.animStop();
        this.stopMoving();
        this.stopDirectMoving();
        if (this.$navHol) {
            this.$navHol.find("li").each(function (h) {
                d(this).unbind()
            })
        }
        this.$mainHolder.unbind(".lhpMIV");
        this.$contentHol.unbind();
        this.$mivHol.remove();
        d.each(this, function (i, h) {
            if (!d.isFunction(h)) {
                i = null
            }
        })
    };
    e.prototype.mousePageCoor = function (i) {
        var h = {
            x: i.pageX,
            y: i.pageY
        };
        i = i.originalEvent;
        if (this.isTouchDev && i) {
            h.x = i.changedTouches[0].pageX;
            h.y = i.changedTouches[0].pageY
        }
        return h
    };
    e.prototype.mouseenterHandler = function (h) {
        h.data._this.$contentHol.css("cursor", "url(css/lhp_miv/cursorHand.png),default")
    };
    e.prototype.mousedownHandler = function (h) {
        var i = h.data._this;
        i.animStop(true);
        i.stopMoving();
        i.stopDirectMoving();
        if (i.isTouchDev) {
            i.$contentHol.unbind("touchmove.lhpMIV", i.mousemoveHandler).bind("touchmove.lhpMIV", {
                _this: i
            }, i.mousemoveHandler);
            i.$contentHol.unbind({
                "touchend.lhpMIV": i.positioning
            }).bind("touchend.lhpMIV", {
                _this: i
            }, i.positioning)
        } else {
            i.$contentHol.unbind("mousemove.lhpMIV", i.mousemoveHandler).bind("mousemove.lhpMIV", {
                _this: i
            }, i.mousemoveHandler);
            i.$contentHol.unbind({
                "mouseup.lhpMIV": i.positioning
            }).bind("mouseup.lhpMIV", {
                _this: i
            }, i.positioning)
        }
        i.lastMousePageCoor = i.mousePageCoor(h);
        i.$contentHol.css("cursor", "url(css/lhp_miv/cursorDrag.png), move");
        h.preventDefault()
    };
    e.prototype.mousemoveHandler = function (h) {
        var i = h.data._this;
        if (i.isTouchDev) {
            i.$contentHol.unbind({
                "touchend.lhpMIV": i.positioning
            });
            i.$contentHol.unbind({
                "touchend.lhpMIV": i.stopDraggingHandler
            }).bind("touchend.lhpMIV", {
                _this: i
            }, i.stopDraggingHandler)
        } else {
            i.$contentHol.unbind("mouseup.lhpMIV", i.positioning);
            i.$contentHol.unbind({
                "mouseup.lhpMIV": i.stopDraggingHandler
            }).bind("mouseup.lhpMIV", {
                _this: i
            }, i.stopDraggingHandler);
            i.$contentHol.unbind({
                "mouseleave.lhpMIV": i.stopDraggingHandler
            }).bind("mouseleave.lhpMIV", {
                _this: i
            }, i.stopDraggingHandler)
        }
        i.dragging(h, "hard");
        h.preventDefault()
    };
    e.prototype.mouseupHandler = function (h) {
        var i = h.data._this;
        i.$contentHol.unbind("mousemove.lhpMIV", i.mousemoveHandler);
        i.$contentHol.unbind("mouseup.lhpMIV", i.positioning);
        i.$contentHol.css("cursor", "url(css/lhp_miv/cursorHand.png),default")
    };
    e.prototype.stopDraggingHandler = function (h) {
        var i = h.data._this;
        i.$contentHol.unbind({
            "mouseup.lhpMIV": i.stopDraggingHandler
        });
        i.$contentHol.unbind({
            "mouseleave.lhpMIV": i.stopDraggingHandler
        });
        i.dragging(h, "inertia")
    };
    e.prototype.mousewheelHandler = function (i, l) {
        var k = i.data._this,
            j = (l > 0) ? k.sm.nextScale() : k.sm.prevScale(),
            h = k.calculateScale(i, j);
        k.animStop();
        k.stopMoving();
        k.stopDirectMoving();
        k.animSizeAndPos(h.x, h.y, h.w, h.h);
        return false
    };
    e.prototype.adaptsToContainer = function () {
        if (this.$content) {
            var h = this.$content.width() / this.contentFullSize.w;
            h = (h > 1) ? 1 : h;
            this.animStop();
            this.stopMoving();
            this.stopDirectMoving();
            this.setProperties(null, null, h, true)
        }
    };
    e.prototype.beginZooming = function (j) {
        var n = (j == "Z") ? 1 : -1,
            k = {
                _this: this
            },
            m = {
                x: (this.$mivHol.width() / 2),
                y: (this.$mivHol.height() / 2)
            },
            h = this.$mivHol.offset(),
            i = {
                x: (m.x + h.left),
                y: (m.y + h.top)
            },
            l = {
                data: k,
                pageX: i.x,
                pageY: i.y
            };
        this.animStop(true);
        this.stopMoving();
        this.stopDirectMoving();
        if (!this.movingIntreval) {
            this.movingIntreval = setInterval(function (q, o, p) {
                return function () {
                    q.zooming(o, p)
                }
            }(this, l, n), this.sett.animTime / 5)
        }
        this.zooming(l, n)
    };
    e.prototype.zooming = function (i, k) {
        var j = (k > 0) ? this.sm.nextScale() : this.sm.prevScale(),
            h = this.calculateScale(i, j);
        this.animStop();
        this.animSizeAndPos(h.x, h.y, h.w, h.h)
    };
    e.prototype.stopZooming = function () {
        this.stopMoving()
    };
    e.prototype.beginDirectMove = function (h) {
        this.animStop(true);
        this.stopMoving();
        this.sm.setScale(this.$content.width() / this.contentFullSize.w);
        this.speedX = this.speedY = 0;
        switch (h) {
        case "U":
            this.speedY = -50000 / this.sett.animTime;
            break;
        case "D":
            this.speedY = 50000 / this.sett.animTime;
            break;
        case "L":
            this.speedX = -50000 / this.sett.animTime;
            break;
        case "R":
            this.speedX = 50000 / this.sett.animTime;
            break
        }
        if (!this.movingDirectIntreval && (this.speedX || this.speedY)) {
            this.movingDirectIntreval = setInterval(function (i) {
                return function () {
                    i.directMoveWithInertia()
                }
            }(this), 10)
        }
    };
    e.prototype.directMoveWithInertia = function () {
        var i = this.$contentHol.position().left,
            h = this.$contentHol.position().top,
            k = Math.ceil(i + this.speedX),
            j = Math.ceil(h + this.speedY);
        if (!this.movingIntreval) {
            this.movingIntreval = setInterval(function (l) {
                return function () {
                    l.moveWithInertia()
                }
            }(this), 10)
        }
        safeTarget = this.getSafeTarget(k, j, this.speedX, this.speedY);
        this.targetX = safeTarget.x;
        this.targetY = safeTarget.y
    };
    e.prototype.stopDirectMoving = function () {
        clearInterval(this.movingDirectIntreval);
        this.movingDirectIntreval = null
    };
    e.prototype.dragging = function (m, k) {
        var l = this.sett.draggInertia,
            i = this.mousePageCoor(m),
            j = i.x - this.lastMousePageCoor.x,
            h = i.y - this.lastMousePageCoor.y;
        if (k == "inertia" && this.lastDragg) {
            this.draggingWithInertia(this.lastDragg.x * l, this.lastDragg.y * l)
        } else {
            this.draggingHard(j, h)
        }
        this.lastDragg = {
            x: (Math.abs(j) < 5) ? 0 : j,
            y: (Math.abs(h) < 5) ? 0 : h
        };
        this.lastMousePageCoor = i
    };
    e.prototype.draggingHard = function (i, h) {
        var j = this.$contentHol.position();
        targetX = j.left + i, targetY = j.top + h, safeTarget = this.getSafeTarget(targetX, targetY, i, h);
        this.animStop();
        this.$contentHol.css({
            left: safeTarget.x,
            top: safeTarget.y
        })
    };
    e.prototype.draggingWithInertia = function (i, h) {
        var l = this.targetX + i,
            j = this.targetY + h,
            k;
        if (!this.movingIntreval) {
            this.movingIntreval = setInterval(function (m) {
                return function () {
                    m.moveWithInertia()
                }
            }(this), 10);
            l = this.$contentHol.position().left + i;
            j = this.$contentHol.position().top + h
        }
        k = this.getSafeTarget(l, j, i, h);
        this.targetX = Math.ceil(k.x);
        this.targetY = Math.ceil(k.y)
    };
    e.prototype.getSafeTarget = function (o, n, j, i) {
        var h = this.getLimit(this.sm.getScale()),
            k = h.xMin,
            m = h.xMax,
            p = h.yMin,
            l = h.yMax;
        if ((i < 0) && (n < p)) {
            n = p
        } else {
            if ((i > 0) && (n > l)) {
                n = l
            }
        }
        if ((j < 0) && (o < k)) {
            o = k
        } else {
            if ((j > 0) && (o > m)) {
                o = m
            }
        }
        return {
            x: o,
            y: n
        }
    };
    e.prototype.moveWithInertia = function () {
        var k = this.$contentHol.position(),
            j = this.sett.dragSmooth,
            i, h;
        k.left = Math.ceil(k.left);
        k.top = Math.ceil(k.top);
        i = (this.targetX - k.left) / j;
        h = (this.targetY - k.top) / j;
        if (Math.abs(i) < 1) {
            i = (i > 0) ? 1 : -1
        }
        if (Math.abs(h) < 1) {
            h = (h > 0) ? 1 : -1
        }
        if (k.left == this.targetX) {
            i = 0
        }
        if (k.top == this.targetY) {
            h = 0
        }
        this.$contentHol.css({
            left: k.left + i,
            top: k.top + h
        });
        this.dispatchEventChange();
        if (k.left == this.targetX && k.top == this.targetY) {
            this.stopDirectMoving();
            this.stopMoving()
        }
    };
    e.prototype.stopMoving = function () {
        clearInterval(this.movingIntreval);
        this.movingIntreval = null
    };
    e.prototype.positioning = function (i) {
        var j = i.data._this,
            h = j.calculatePosInCenter(i);
        j.animStop();
        j.stopMoving();
        j.stopDirectMoving();
        j.animSizeAndPos(h.x, h.y)
    };
    e.prototype.setProperties = function (u, q, j, t) {
        if (this.$content) {
            var k = {
                _this: this
            },
                l = {
                    x: (this.$mivHol.width() / 2),
                    y: (this.$mivHol.height() / 2)
                },
                v = this.$mivHol.offset(),
                o = {
                    x: (l.x + v.left),
                    y: (l.y + v.top)
                },
                m = {
                    data: k,
                    pageX: o.x,
                    pageY: o.y
                },
                s = this.$contentHol.position(),
                n, r, h = s.left,
                w = s.top,
                i = this.$content.width(),
                p = this.$content.height();
            u = parseFloat(u);
            q = parseFloat(q);
            j = parseFloat(j);
            if (!isNaN(j)) {
                if (j > 1) {
                    j = 1
                }
                n = this.calculateScale(m, j);
                h = n.x;
                w = n.y;
                i = n.w;
                p = n.h
            }
            r = i / this.contentFullSize.w;
            if (!isNaN(u)) {
                h = -(u * r) + l.x
            }
            if (!isNaN(q)) {
                w = -(q * r) + l.y
            }
            this.animStop();
            this.stopMoving();
            this.stopDirectMoving();
            this.animSizeAndPos(h, w, i, p, t)
        }
    };
    e.prototype.calculatePosInCenter = function (j) {
        var k = this.$contentHol.position(),
            n = this.$mivHol.offset(),
            i = {
                x: (this.$mivHol.width() / 2),
                y: (this.$mivHol.height() / 2)
            },
            o = this.mousePageCoor(j),
            p = {
                x: (o.x - n.left),
                y: (o.y - n.top)
            },
            m, l, h, q;
        m = i.x - p.x;
        l = i.y - p.y;
        h = k.left + m;
        q = k.top + l;
        return {
            x: h,
            y: q,
            shftX: m,
            shftY: l
        }
    };
    e.prototype.calculateScale = function (m, l) {
        var p = this.$mivHol.offset(),
            k = this.$content.offset(),
            q = this.mousePageCoor(m),
            o, j, h, r, i, n;
        l = this.getSafeScale(l);
        this.sm.setScale(l);
        o = this.$content.width() / this.contentFullSize.w;
        j = {
            x: (q.x - k.left) / o,
            y: (q.y - k.top) / o
        };
        i = Math.round(this.contentFullSize.w * l);
        n = Math.round(this.contentFullSize.h * l);
        h = Math.round(k.left - p.left + j.x * (o - l));
        r = Math.round(k.top - p.top + j.y * (o - l));
        return {
            x: h,
            y: r,
            w: i,
            h: n
        }
    };
    e.prototype.getSafeScale = function (o) {
        var j = o,
            n = this.$mivHol.width(),
            m = this.$mivHol.height(),
            l = this.contentFullSize.w * o,
            h = this.contentFullSize.h * o,
            i, k;
        if (l < n || h < m) {
            i = n / this.contentFullSize.w;
            k = m / this.contentFullSize.h;
            j = Math.max(i, k)
        }
        return j
    };
    e.prototype.getLimit = function (j) {
        var i = -(Math.round(this.contentFullSize.w * j) - this.$mivHol.width()),
            h = -(Math.round(this.contentFullSize.h * j) - this.$mivHol.height());
        return {
            xMin: i,
            xMax: 0,
            yMin: h,
            yMax: 0
        }
    };
    e.prototype.getSafeXY = function (h, m, l) {
        var i = this.getLimit(l),
            k = h,
            j = m;
        if (h < i.xMin) {
            k = i.xMin
        } else {
            if (h > i.xMax) {
                k = i.xMax
            }
        }
        if (m < i.yMin) {
            j = i.yMin
        } else {
            if (m > i.yMax) {
                j = i.yMax
            }
        }
        return {
            x: k,
            y: j
        }
    };
    e.prototype.animSizeAndPos = function (i, p, k, m, j) {
        var o, n, l = function (h) {
                return function () {
                    h.dispatchEventChange()
                }
            }(this);
        if (k != undefined) {
            n = k / this.contentFullSize.w
        } else {
            n = this.$content.width() / this.contentFullSize.w
        }
        if (i != undefined && p != undefined) {
            o = this.getSafeXY(i, p, n);
            if (j) {
                this.$contentHol.css({
                    left: o.x,
                    top: o.y
                });
                this.dispatchEventChange()
            } else {
                this.$contentHol.animate({
                    left: o.x,
                    top: o.y
                }, {
                    duration: this.sett.animTime,
                    easing: "easeOutCubic",
                    step: l,
                    complete: l
                })
            }
        }
        if (k != undefined && m != undefined) {
            if (j) {
                this.$content.css({
                    width: k,
                    height: m
                });
                this.dispatchEventChange()
            } else {
                this.$content.animate({
                    width: k,
                    height: m
                }, {
                    duration: this.sett.animTime,
                    easing: "easeOutCubic",
                    step: l,
                    complete: l
                })
            }
        }
    };
    e.prototype.animStop = function (h) {
        if (this.$contentHol && this.$content) {
            this.$contentHol.stop().clearQueue();
            this.$content.stop().clearQueue();
            if (h) {
                this.sm.setScale(this.$content.width() / this.contentFullSize.w)
            }
            this.dispatchEventChange()
        }
    };
    e.prototype.dispatchEventChange = function () {
        var k, h = {},
            m = this.$contentHol.position(),
            j = this.getLimit(this.sm.getScale()),
            l = this.$content.width(),
            i = this.$content.height();
        h.allowDown = (Math.ceil(m.top) < Math.ceil(j.yMax));
        h.allowUp = (Math.ceil(m.top) > Math.ceil(j.yMin));
        h.allowRight = (Math.ceil(m.left) < Math.ceil(j.xMax));
        h.allowLeft = (Math.ceil(m.left) > Math.ceil(j.xMin));
        h.allowZoom = (l / this.contentFullSize.w < 1);
        h.allowUnzoom = (l > this.$mivHol.width() && i > this.$mivHol.height());
        if (!this.allowCompare(h, this.allow)) {
            k = d.Event("mivChange", h);
            this.$mainHolder.trigger(k)
        }
        this.allow = h
    };
    e.prototype.allowCompare = function (j, h) {
        var i = true;
        d.each(j, function (l) {
            if (j[l] != h[l]) {
                i = false;
                return
            }
        });
        return i
    };
    var a = function () {
            this.step = 0.1;
            this.curr = 1
        };
    a.prototype.getScale = function () {
        return this.curr
    };
    a.prototype.setScale = function (h) {
        this.curr = h
    };
    a.prototype.nextScale = function () {
        var h = this.curr + this.step;
        if (h > 1) {
            this.curr = 1
        } else {
            this.curr = h
        }
        return this.getScale()
    };
    a.prototype.prevScale = function () {
        var h = this.curr - this.step;
        if (h < this.step) {
            this.curr = this.step
        } else {
            this.curr = h
        }
        return this.getScale()
    };
    var b = function (i, h, k) {
            var j = d("<img/>");
            this.callback = k;
            j.one("load", function (l) {
                return function (m) {
                    l.loadComplete(m)
                }
            }(this));
            h.append(j);
            j.attr("src", i)
        };
    b.prototype.loadComplete = function (h) {
        if (this.callback) {
            this.callback(d(h.currentTarget))
        }
    };
    b.prototype.dispose = function () {
        this.callback = null
    }
})(jQuery);